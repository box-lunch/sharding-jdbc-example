mode:
  type: Standalone
  repository:
    type: JDBC

dataSources:
  master1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://192.168.5.120:13306/mytestdb
    username: myuser
    password: mypassword
  master2:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://192.168.5.120:13307/mytestdb
    username: myuser
    password: mypassword
  slave1_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://192.168.5.120:13308/mytestdb
    username: myuser
    password: mypassword
  slave1_2:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://192.168.5.120:13309/mytestdb
    username: myuser
    password: mypassword
  slave2_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://192.168.5.120:13310/mytestdb
    username: myuser
    password: mypassword
  slave2_2:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://192.168.5.120:13311/mytestdb
    username: myuser
    password: mypassword

rules:
# 广播表
- !BROADCAST
  tables:
    - t_dict
# 读写分离
- !READWRITE_SPLITTING
#用官网的dataSourceGroup会报错
  dataSources:
    readwrite_ds_1:
      writeDataSourceName: master1
      readDataSourceNames:
        - slave1_1
        - slave1_2
      transactionalReadQueryStrategy: PRIMARY
      loadBalancerName: random
    readwrite_ds_2:
        writeDataSourceName: master2
        readDataSourceNames:
        - slave2_1
        - slave2_2
        transactionalReadQueryStrategy: PRIMARY
        loadBalancerName: random
  loadBalancers:
    random:
      type: RANDOM
      
props:
    sql-show: true